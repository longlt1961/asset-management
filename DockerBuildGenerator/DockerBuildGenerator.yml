app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: DockerBuildGenerator
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/gemini:0.2.3@d257af00999f3fa02f7ebbf55ffb60e1fd7418212aaeb0823a8de5639730734e
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: http-request
      id: 1748527670044-source-1748943301158-target
      selected: false
      source: '1748527670044'
      sourceHandle: source
      target: '1748943301158'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: http-request
        targetType: llm
      id: 1748943301158-source-1748838766761-target
      selected: false
      source: '1748943301158'
      sourceHandle: source
      target: '1748838766761'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: agent
        targetType: end
      id: 1748943449585-source-1748943619703-target
      selected: false
      source: '1748943449585'
      sourceHandle: source
      target: '1748943619703'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: agent
      id: 1748838766761-source-1748943449585-target
      source: '1748838766761'
      sourceHandle: source
      target: '1748943449585'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Start
        type: start
        variables:
        - allowed_file_extensions: []
          allowed_file_types:
          - image
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: source_code_uri
          max_length: 1000
          options: []
          required: true
          type: paragraph
          variable: source_code
        - label: ssh_host
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: ssh_host
        - label: ssh_port
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: ssh_port
        - label: ssh_user
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: ssh_user
        - label: ssh_password
          max_length: 256
          options: []
          required: true
          type: text-input
          variable: ssh_password
      height: 193
      id: '1748527670044'
      position:
        x: 93.20965212943827
        y: 308.8384226028414
      positionAbsolute:
        x: 93.20965212943827
        y: 308.8384226028414
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0
          mode: chat
          name: gemini-2.0-flash
          provider: langgenius/gemini/google
        prompt_template:
        - id: da059d5b-db26-4c11-8ec2-f22cf3b74496
          role: system
          text: 'You are a senior DevOps engineer. Your task is to generate all necessary
            Docker-related configuration files to containerize and run a multi-service
            application.


            ---


            ## Requirements

            Based on {{#1748943301158.body#}}

            Given the source code of the project, generate the following configuration
            files:

            1. A Dockerfile for each service

            2. A docker-compose.yaml file that orchestrates all services

            3. A production-ready nginx.conf file (if applicable)


            Make sure the configuration:

            - Uses best practices for production-ready builds (e.g., multi-stage if
            needed)

            - Assigns correct ports (e.g., backend 3000, frontend 8080)

            - Handles dependencies with npm install

            - Maps folders and volumes properly

            - Is self-contained, minimal, and idempotent

            - Sets up Nginx as a reverse proxy (not as a static file server)

            - Provide a valid nginx.conf using proxy_pass to route requests to the
            correct upstream container

            - Use Docker networking to reference services by container name

            ## Nginx Proxy Requirements

            - Always include an nginx.conf and an Nginx service that acts as a reverse
            proxy (not a file host).

            - Nginx must forward incoming HTTP requests to appropriate containers
            via proxy_pass, using Docker service names.

            - Do not copy frontend build files into /usr/share/nginx/html. Instead,
            use Nginx to proxy requests to the frontend container (e.g., proxy_pass
            http://frontend:8080).

            - If a backend service is present, proxy relevant paths (e.g., /api/)
            to the backend container using the same method.

            - If no backend is detected, omit backend-related config (e.g., no placeholder
            or commented blocks).

            Nginx should listen on port 80.

            ## Output format

            Return the entire output as one text block, with each file clearly separated
            by:

            Example:

            # Dockerfile

            ...


            # docker-compose.yaml

            ...


            # nginx.conf

            ...'
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              docker_compose_file:
                description: docker-compose for starting services
                type: string
              dockerfile:
                description: containerization scripts for applications
                type: string
              nginx_config:
                description: nginx config file if neccessary
                type: string
            required:
            - dockerfile
            - docker_compose_file
            type: object
        structured_output_enabled: false
        title: Docker Compose Writer
        type: llm
        variables: []
        vision:
          enabled: false
      height: 89
      id: '1748838766761'
      position:
        x: 795.1360854561842
        y: 308.8384226028414
      positionAbsolute:
        x: 795.1360854561842
        y: 308.8384226028414
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        author: Le Chau Cong Thanh
        desc: ''
        height: 132
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Information
          to set up the staging server","type":"text","version":1},{"type":"linebreak","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"-
          Credentials","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"-
          Source code","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 245
      height: 132
      id: '1748848287043'
      position:
        x: 93.20965212943827
        y: 507.3384226028413
      positionAbsolute:
        x: 93.20965212943827
        y: 507.3384226028413
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 245
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: []
          type: none
        desc: ''
        headers: ''
        method: get
        params: git_url:{{#1748527670044.source_code#}}
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: HTTP Request
        type: http-request
        url: http://172.30.240.95:8000/source-info
        variables: []
      height: 138
      id: '1748943301158'
      position:
        x: 451.0175902405574
        y: 308.8384226028414
      positionAbsolute:
        x: 451.0175902405574
        y: 308.8384226028414
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        agent_parameters:
          instruction:
            type: constant
            value: 'You are a DevOps engineer automating deployment on a remote server
              via SSH.

              Use the SSH Command tool with the following parameters:

              host: {{#1748527670044.ssh_host#}}

              port: {{#1748527670044.ssh_port#}}

              username: {{#1748527670044.ssh_user#}}

              password: {{#1748527670044.ssh_password#}}

              Your task is to perform the following steps safely and idempotently.
              All application files must be placed under a structured directory:

              ~/app/

              ├── docker/

              │   ├── docker-compose.yaml

              │   ├── nginx.conf

              │   └── Dockerfile.frontend

              └── source/   (cloned app code)


              🐳 Step 1: Verify Docker and Docker Compose

              echo "[1] 🧪 Checking Docker installation..."

              docker --version || (echo "Docker missing" && use Tavily to install
              Docker on ubuntu for the first time)

              docker compose version || (echo "Docker Compose missing" && use Tavily
              to install Docker Compose)


              If either Docker or Docker Compose is not found, use Tavily to search
              for how to install Docker and Docker Compose for the specific Ubuntu
              version. Install using non-interactive flags (e.g., -y).

              Try to start Docker:

              systemctl start docker || (dockerd > /var/log/dockerd.log 2>&1 &)

              docker ps || (echo "Failed to start Docker" && use Tavily to resolve
              issue)


              📦 Step 2: Prepare Application Folder

              Only proceed if Docker and Docker Compose are confirmed to be installed
              and running.

              echo "[2] 📁 Preparing folder layout..."

              mkdir -p ~/app/docker ~/app/source

              rm -rf ~/app/source/*


              📄 Step 3: Clone Repository

              echo "[3] 🔄 Cloning source code..."

              git clone {{#1748527670044.source_code#}} ~/app/source || echo "✅ Already
              cloned"


              📝 Step 4: Write Dockerfile

              echo "[4] 📝 Writing Dockerfile..."

              cat <<EOF > ~/app/docker/Dockerfile.frontend

              {{#1748838766761.text#}}

              EOF


              ✅ Ensure COPY commands reference ../source relative to the Docker build
              context

              📑 Step 5: Write docker-compose.yaml

              echo "[5] 🧾 Writing docker-compose file..."

              cat <<EOF > ~/app/docker/docker-compose.yaml

              {{#1748838766761.text#}}

              EOF


              ✅ Ensure build.context: ../source, dockerfile: ../docker/Dockerfile.frontend
              reflect the actual locations

              🚀 Step 6: Start Application

              echo "[6] 🚀 Starting application using Docker Compose..."

              cd ~/app/docker

              docker compose up -d --build || (echo "⚠️ Docker compose failed" &&
              use Tavily to diagnose and resolve the issue)


              ✅ Step 7: Confirm Services Are Running

              echo "[7] ✅ Verifying running containers..."

              docker ps || (echo "❌ docker ps failed - containers not running" &&
              use Tavily to find common fixes)'
          maximum_iterations:
            type: constant
            value: 30
          model:
            type: constant
            value:
              completion_params: {}
              mode: chat
              model: gemini-2.0-flash-001
              model_type: llm
              provider: langgenius/gemini/google
              type: model-selector
          query:
            type: constant
            value: 'You are a DevOps engineer automating deployment on a remote server
              via SSH.

              Use the SSH Command tool with the following parameters:

              host: {{#1748527670044.ssh_host#}}

              port: {{#1748527670044.ssh_port#}}

              username: {{#1748527670044.ssh_user#}}

              password: {{#1748527670044.ssh_password#}}

              Your task is to perform the following steps safely and idempotently.
              All application files must be placed under a structured directory:

              ~/app/

              ├── docker/

              │   ├── docker-compose.yaml

              │   ├── nginx.conf

              │   └── Dockerfile.frontend

              └── source/   (cloned app code)


              🐳 Step 1: Verify Docker and Docker Compose

              echo "[1] 🧪 Checking Docker installation..."

              docker --version || (echo "Docker missing" && use Tavily to install
              Docker on ubuntu for the first time)

              docker compose version || (echo "Docker Compose missing" && use Tavily
              to install Docker Compose)


              If either Docker or Docker Compose is not found, use Tavily to search
              for how to install Docker and Docker Compose for the specific Ubuntu
              version. Install using non-interactive flags (e.g., -y).

              Try to start Docker:

              systemctl start docker || (dockerd > /var/log/dockerd.log 2>&1 &)

              docker ps || (echo "Failed to start Docker" && use Tavily to resolve
              issue)


              📦 Step 2: Prepare Application Folder

              Only proceed if Docker and Docker Compose are confirmed to be installed
              and running.

              echo "[2] 📁 Preparing folder layout..."

              mkdir -p ~/app/docker ~/app/source

              rm -rf ~/app/source/*


              📄 Step 3: Clone Repository

              echo "[3] 🔄 Cloning source code..."

              git clone {{#1748527670044.source_code#}} ~/app/source || echo "✅ Already
              cloned"


              📝 Step 4: Write Dockerfile

              echo "[4] 📝 Writing Dockerfile..."

              cat <<EOF > ~/app/docker/Dockerfile.frontend

              {{#1748838766761.text#}}

              EOF


              ✅ Ensure COPY commands reference ../source relative to the Docker build
              context

              📑 Step 5: Write docker-compose.yaml

              echo "[5] 🧾 Writing docker-compose file..."

              cat <<EOF > ~/app/docker/docker-compose.yaml

              {{#1748838766761.text#}}

              EOF


              ✅ Ensure build.context: ../source, dockerfile: ../docker/Dockerfile.frontend
              reflect the actual locations

              🚀 Step 6: Start Application

              echo "[6] 🚀 Starting application using Docker Compose..."

              cd ~/app/docker

              docker compose up -d --build || (echo "⚠️ Docker compose failed" &&
              use Tavily to diagnose and resolve the issue)


              ✅ Step 7: Confirm Services Are Running

              echo "[7] ✅ Verifying running containers..."

              docker ps || (echo "❌ docker ps failed - containers not running" &&
              use Tavily to find common fixes)'
          tools:
            type: constant
            value:
            - enabled: true
              extra:
                description: Execute commands on remote servers via SSH
              parameters:
                command:
                  auto: 1
                  value: null
                host:
                  auto: 1
                  value: null
                passphrase:
                  auto: 1
                  value: null
                password:
                  auto: 1
                  value: null
                port:
                  auto: 1
                  value: null
                private_key:
                  auto: 1
                  value: null
                username:
                  auto: 1
                  value: null
              provider_name: stvlynn/ssh/ssh
              schemas:
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The hostname or IP address of the remote server
                  ja_JP: The hostname or IP address of the remote server
                  pt_BR: O nome do host ou endereço IP do servidor remoto
                  zh_Hans: 远程服务器的主机名或IP地址
                label:
                  en_US: Host
                  ja_JP: Host
                  pt_BR: Host
                  zh_Hans: 主机
                llm_description: The hostname or IP address of the remote server to
                  connect to via SSH.
                max: null
                min: null
                name: host
                options: []
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The SSH port of the remote server (default 22)
                  ja_JP: The SSH port of the remote server (default 22)
                  pt_BR: A porta SSH do servidor remoto (padrão 22)
                  zh_Hans: 远程服务器的SSH端口（默认22）
                label:
                  en_US: Port
                  ja_JP: Port
                  pt_BR: Porta
                  zh_Hans: 端口
                llm_description: The SSH port of the remote server. Default is 22.
                max: null
                min: null
                name: port
                options: []
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: number
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The username to authenticate with
                  ja_JP: The username to authenticate with
                  pt_BR: O nome de usuário para autenticação
                  zh_Hans: 用于认证的用户名
                label:
                  en_US: Username
                  ja_JP: Username
                  pt_BR: Nome de usuário
                  zh_Hans: 用户名
                llm_description: The username to authenticate with on the remote server.
                max: null
                min: null
                name: username
                options: []
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: password
                form: form
                human_description:
                  en_US: Choose between password or private key authentication
                  ja_JP: Choose between password or private key authentication
                  pt_BR: Escolha entre autenticação por senha ou chave privada
                  zh_Hans: 选择密码或私钥认证
                label:
                  en_US: Authentication Type
                  ja_JP: Authentication Type
                  pt_BR: Tipo de Autenticação
                  zh_Hans: 认证类型
                llm_description: The authentication method to use (password or private
                  key).
                max: null
                min: null
                name: auth_type
                options:
                - label:
                    en_US: Password
                    ja_JP: Password
                    pt_BR: Senha
                    zh_Hans: 密码
                  value: password
                - label:
                    en_US: Private Key
                    ja_JP: Private Key
                    pt_BR: Chave Privada
                    zh_Hans: 私钥
                  value: key
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: select
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The password for password authentication (required if auth_type
                    is password)
                  ja_JP: The password for password authentication (required if auth_type
                    is password)
                  pt_BR: A senha para autenticação por senha (obrigatório se o tipo
                    de autenticação for senha)
                  zh_Hans: 用于密码认证的密码（如果认证类型为密码则必填）
                label:
                  en_US: Password
                  ja_JP: Password
                  pt_BR: Senha
                  zh_Hans: 密码
                llm_description: The password for password authentication. Required
                  if auth_type is password.
                max: null
                min: null
                name: password
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The private key for key authentication (required if auth_type
                    is key)
                  ja_JP: The private key for key authentication (required if auth_type
                    is key)
                  pt_BR: A chave privada para autenticação por chave (obrigatório
                    se o tipo de autenticação for chave)
                  zh_Hans: 用于密钥认证的私钥（如果认证类型为私钥则必填）
                label:
                  en_US: Private Key
                  ja_JP: Private Key
                  pt_BR: Chave Privada
                  zh_Hans: 私钥
                llm_description: The private key content for key-based authentication.
                  Required if auth_type is key.
                max: null
                min: null
                name: private_key
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The passphrase for the private key (if the key is encrypted)
                  ja_JP: The passphrase for the private key (if the key is encrypted)
                  pt_BR: A frase-senha para a chave privada (se a chave estiver criptografada)
                  zh_Hans: 私钥的密码（如果私钥已加密）
                label:
                  en_US: Passphrase
                  ja_JP: Passphrase
                  pt_BR: Frase-senha
                  zh_Hans: 密钥口令
                llm_description: The passphrase for the private key if it is encrypted.
                  Optional.
                max: null
                min: null
                name: passphrase
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The command to execute on the remote server
                  ja_JP: The command to execute on the remote server
                  pt_BR: O comando a ser executado no servidor remoto
                  zh_Hans: 在远程服务器上执行的命令
                label:
                  en_US: Command
                  ja_JP: Command
                  pt_BR: Comando
                  zh_Hans: 命令
                llm_description: The command to execute on the remote server.
                max: null
                min: null
                name: command
                options: []
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: string
              settings:
                auth_type:
                  value: password
              tool_description: Execute commands on remote servers via SSH
              tool_label: SSH Command Execution
              tool_name: ssh
              type: builtin
            - enabled: true
              extra:
                description: A search engine tool built specifically for AI agents
                  (LLMs), delivering real-time, accurate, and factual results at speed.
              parameters:
                days:
                  auto: 1
                  value: null
                query:
                  auto: 1
                  value: null
                search_depth:
                  auto: 1
                  value: null
                time_range:
                  auto: 1
                  value: null
                topic:
                  auto: 1
                  value: null
              provider_name: langgenius/tavily/tavily
              schemas:
              - auto_generate: null
                default: null
                form: llm
                human_description:
                  en_US: The search query you want to execute with Tavily.
                  ja_JP: The search query you want to execute with Tavily.
                  pt_BR: The search query you want to execute with Tavily.
                  zh_Hans: 您想用 Tavily 执行的搜索查询。
                label:
                  en_US: Query
                  ja_JP: Query
                  pt_BR: Query
                  zh_Hans: 查询
                llm_description: The search query.
                max: null
                min: null
                name: query
                options: []
                placeholder: null
                precision: null
                required: true
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: basic
                form: llm
                human_description:
                  en_US: The depth of the search.
                  ja_JP: The depth of the search.
                  pt_BR: The depth of the search.
                  zh_Hans: 搜索的深度。
                label:
                  en_US: Search Depth
                  ja_JP: Search Depth
                  pt_BR: Search Depth
                  zh_Hans: 搜索深度
                llm_description: The depth of the search. 'basic' for standard search,
                  'advanced' for more comprehensive results.
                max: null
                min: null
                name: search_depth
                options:
                - label:
                    en_US: Basic
                    ja_JP: Basic
                    pt_BR: Basic
                    zh_Hans: 基本
                  value: basic
                - label:
                    en_US: Advanced
                    ja_JP: Advanced
                    pt_BR: Advanced
                    zh_Hans: 高级
                  value: advanced
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: select
              - auto_generate: null
                default: general
                form: llm
                human_description:
                  en_US: The category of the search.
                  ja_JP: The category of the search.
                  pt_BR: The category of the search.
                  zh_Hans: 搜索的类别。
                label:
                  en_US: Topic
                  ja_JP: Topic
                  pt_BR: Topic
                  zh_Hans: 主题
                llm_description: The category of the search. Options include 'general',
                  'news', or 'finance'.
                max: null
                min: null
                name: topic
                options:
                - label:
                    en_US: General
                    ja_JP: General
                    pt_BR: General
                    zh_Hans: 一般
                  value: general
                - label:
                    en_US: News
                    ja_JP: News
                    pt_BR: News
                    zh_Hans: 新闻
                  value: news
                - label:
                    en_US: Finance
                    ja_JP: Finance
                    pt_BR: Finance
                    zh_Hans: 金融
                  value: finance
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: select
              - auto_generate: null
                default: 3
                form: llm
                human_description:
                  en_US: The number of days back from the current date to include
                    in the search results (only applicable when "topic" is "news").
                  ja_JP: The number of days back from the current date to include
                    in the search results (only applicable when "topic" is "news").
                  pt_BR: The number of days back from the current date to include
                    in the search results (only applicable when "topic" is "news").
                  zh_Hans: 从当前日期起向前追溯的天数，以包含在搜索结果中（仅当"topic"为"news"时适用）。
                label:
                  en_US: Days
                  ja_JP: Days
                  pt_BR: Days
                  zh_Hans: 天数
                llm_description: The number of days back from the current date to
                  include in the search results. Only applicable when "topic" is "news".
                max: null
                min: 1
                name: days
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: number
              - auto_generate: null
                default: not_specified
                form: llm
                human_description:
                  en_US: The time range back from the current date to filter results.
                  ja_JP: The time range back from the current date to filter results.
                  pt_BR: The time range back from the current date to filter results.
                  zh_Hans: 从当前日期起向后筛选结果的时间范围。
                label:
                  en_US: Time Range
                  ja_JP: Time Range
                  pt_BR: Time Range
                  zh_Hans: 时间范围
                llm_description: The time range back from the current date to filter
                  results. Options include 'not_specified', 'day', 'week', 'month',
                  or 'year'.
                max: null
                min: null
                name: time_range
                options:
                - label:
                    en_US: Not Specified
                    ja_JP: Not Specified
                    pt_BR: Not Specified
                    zh_Hans: 不指定
                  value: not_specified
                - label:
                    en_US: Day
                    ja_JP: Day
                    pt_BR: Day
                    zh_Hans: 天
                  value: day
                - label:
                    en_US: Week
                    ja_JP: Week
                    pt_BR: Week
                    zh_Hans: 周
                  value: week
                - label:
                    en_US: Month
                    ja_JP: Month
                    pt_BR: Month
                    zh_Hans: 月
                  value: month
                - label:
                    en_US: Year
                    ja_JP: Year
                    pt_BR: Year
                    zh_Hans: 年
                  value: year
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: select
              - auto_generate: null
                default: 5
                form: form
                human_description:
                  en_US: The maximum number of search results to return.
                  ja_JP: The maximum number of search results to return.
                  pt_BR: The maximum number of search results to return.
                  zh_Hans: 要返回的最大搜索结果数。
                label:
                  en_US: Max Results
                  ja_JP: Max Results
                  pt_BR: Max Results
                  zh_Hans: 最大结果数
                llm_description: The maximum number of search results to return. Range
                  is 1-20.
                max: 20
                min: 1
                name: max_results
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: number
              - auto_generate: null
                default: 0
                form: form
                human_description:
                  en_US: Include a list of query-related images in the response.
                  ja_JP: Include a list of query-related images in the response.
                  pt_BR: Include a list of query-related images in the response.
                  zh_Hans: 在响应中包含与查询相关的图片列表。
                label:
                  en_US: Include Images
                  ja_JP: Include Images
                  pt_BR: Include Images
                  zh_Hans: 包含图片
                llm_description: When set to true, includes a list of query-related
                  images in the response.
                max: null
                min: null
                name: include_images
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: boolean
              - auto_generate: null
                default: 0
                form: form
                human_description:
                  en_US: When include_images is True, adds descriptive text for each
                    image.
                  ja_JP: When include_images is True, adds descriptive text for each
                    image.
                  pt_BR: When include_images is True, adds descriptive text for each
                    image.
                  zh_Hans: 当 include_images 为 True 时，为每个图像添加描述文本。
                label:
                  en_US: Include Image Descriptions
                  ja_JP: Include Image Descriptions
                  pt_BR: Include Image Descriptions
                  zh_Hans: 包含图片描述
                llm_description: When include_images is True and this is set to true,
                  adds descriptive text for each image.
                max: null
                min: null
                name: include_image_descriptions
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: boolean
              - auto_generate: null
                default: 0
                form: form
                human_description:
                  en_US: Include a short answer to the original query in the response.
                  ja_JP: Include a short answer to the original query in the response.
                  pt_BR: Include a short answer to the original query in the response.
                  zh_Hans: 在响应中包含对原始查询的简短回答。
                label:
                  en_US: Include Answer
                  ja_JP: Include Answer
                  pt_BR: Include Answer
                  zh_Hans: 包含答案
                llm_description: When set to true, includes a short answer to the
                  original query in the response.
                max: null
                min: null
                name: include_answer
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: boolean
              - auto_generate: null
                default: 0
                form: form
                human_description:
                  en_US: Include the cleaned and parsed HTML content of each search
                    result.
                  ja_JP: Include the cleaned and parsed HTML content of each search
                    result.
                  pt_BR: Include the cleaned and parsed HTML content of each search
                    result.
                  zh_Hans: 包含每个搜索结果的已清理和解析的HTML内容。
                label:
                  en_US: Include Raw Content
                  ja_JP: Include Raw Content
                  pt_BR: Include Raw Content
                  zh_Hans: 包含原始内容
                llm_description: When set to true, includes the cleaned and parsed
                  HTML content of each search result.
                max: null
                min: null
                name: include_raw_content
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: boolean
              - auto_generate: null
                default: null
                form: form
                human_description:
                  en_US: A comma-separated list of domains to specifically include
                    in the search results.
                  ja_JP: A comma-separated list of domains to specifically include
                    in the search results.
                  pt_BR: A comma-separated list of domains to specifically include
                    in the search results.
                  zh_Hans: 要在搜索结果中特别包含的域的逗号分隔列表。
                label:
                  en_US: Include Domains
                  ja_JP: Include Domains
                  pt_BR: Include Domains
                  zh_Hans: 包含域
                llm_description: A comma-separated list of domains to specifically
                  include in the search results.
                max: null
                min: null
                name: include_domains
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              - auto_generate: null
                default: null
                form: form
                human_description:
                  en_US: A comma-separated list of domains to specifically exclude
                    from the search results.
                  ja_JP: A comma-separated list of domains to specifically exclude
                    from the search results.
                  pt_BR: A comma-separated list of domains to specifically exclude
                    from the search results.
                  zh_Hans: 要从搜索结果中特别排除的域的逗号分隔列表。
                label:
                  en_US: Exclude Domains
                  ja_JP: Exclude Domains
                  pt_BR: Exclude Domains
                  zh_Hans: 排除域
                llm_description: A comma-separated list of domains to specifically
                  exclude from the search results.
                max: null
                min: null
                name: exclude_domains
                options: []
                placeholder: null
                precision: null
                required: false
                scope: null
                template: null
                type: string
              settings:
                exclude_domains:
                  value: null
                include_answer:
                  value: 0
                include_domains:
                  value: null
                include_image_descriptions:
                  value: 0
                include_images:
                  value: 0
                include_raw_content:
                  value: 0
                max_results:
                  value: 5
              tool_description: A search engine tool built specifically for AI agents
                (LLMs), delivering real-time, accurate, and factual results at speed.
              tool_label: Tavily Search
              tool_name: tavily_search
              type: builtin
        agent_strategy_label: FunctionCalling
        agent_strategy_name: function_calling
        agent_strategy_provider_name: langgenius/agent/agent
        desc: ''
        output_schema: null
        plugin_unique_identifier: langgenius/agent:0.0.15@89d496aa9b23fcd1ef9add8cfcbadeaeb4eb5c30ff8d76f7e6c9d59c46d2e2f5
        selected: true
        title: Agent
        type: agent
      height: 197
      id: '1748943449585'
      position:
        x: 1092.042093625226
        y: 308.8384226028414
      positionAbsolute:
        x: 1092.042093625226
        y: 308.8384226028414
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1748943449585'
          - text
          variable: text
        - value_selector:
          - '1748838766761'
          - text
          variable: text
        selected: false
        title: End
        type: end
      height: 115
      id: '1748943619703'
      position:
        x: 1427.4073113782338
        y: 308.8384226028414
      positionAbsolute:
        x: 1427.4073113782338
        y: 308.8384226028414
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 243
    viewport:
      x: -543.4497531889983
      y: -27.608693249058206
      zoom: 0.870550563296124